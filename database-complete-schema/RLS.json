[
  {
    "tablename": "archived_bookings",
    "policyname": "Admins can delete archived bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "archived_bookings",
    "policyname": "Admins can insert archived bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "( SELECT is_admin() AS is_admin)"
  },
  {
    "tablename": "archived_bookings",
    "policyname": "Admins can update archived bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "archived_bookings",
    "policyname": "View archived bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "(( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "bookings",
    "policyname": "Admin and staff can delete bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "(( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "bookings",
    "policyname": "Customers can create bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "((user_id = ( SELECT auth.uid() AS uid)) OR (user_id IS NULL))"
  },
  {
    "tablename": "bookings",
    "policyname": "Customers can update own bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "((user_id = ( SELECT auth.uid() AS uid)) OR ( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "bookings",
    "policyname": "Customers can view own bookings",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "((user_id = ( SELECT auth.uid() AS uid)) OR ( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "service_categories",
    "policyname": "Admins can delete service categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "service_categories",
    "policyname": "Admins can insert service categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "( SELECT is_admin() AS is_admin)"
  },
  {
    "tablename": "service_categories",
    "policyname": "Admins can update service categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "service_categories",
    "policyname": "View service categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "true",
    "check_expression": null
  },
  {
    "tablename": "services",
    "policyname": "Admins can delete services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "services",
    "policyname": "Admins can insert services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "( SELECT is_admin() AS is_admin)"
  },
  {
    "tablename": "services",
    "policyname": "Admins can update services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "services",
    "policyname": "Public can view active services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "((is_active = true) OR ( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "staff",
    "policyname": "Admins can delete staff",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "staff",
    "policyname": "Admins can insert staff",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "( SELECT is_admin() AS is_admin)"
  },
  {
    "tablename": "staff",
    "policyname": "Admins can update staff",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "staff",
    "policyname": "Public can view active staff",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "((is_active = true) OR ( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "staff_categories",
    "policyname": "Admins can delete staff categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "staff_categories",
    "policyname": "Admins can insert staff categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "( SELECT is_admin() AS is_admin)"
  },
  {
    "tablename": "staff_categories",
    "policyname": "Admins can update staff categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "staff_categories",
    "policyname": "View staff categories",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "true",
    "check_expression": null
  },
  {
    "tablename": "staff_schedules",
    "policyname": "Admins and staff can delete staff schedules",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "(( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "staff_schedules",
    "policyname": "Admins and staff can insert staff schedules",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "(( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))"
  },
  {
    "tablename": "staff_schedules",
    "policyname": "Admins and staff can update staff schedules",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "(( SELECT is_admin() AS is_admin) OR ( SELECT is_staff() AS is_staff))",
    "check_expression": null
  },
  {
    "tablename": "staff_schedules",
    "policyname": "View staff schedules",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "true",
    "check_expression": null
  },
  {
    "tablename": "staff_services",
    "policyname": "Admins can delete staff services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "DELETE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "staff_services",
    "policyname": "Admins can insert staff services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "( SELECT is_admin() AS is_admin)"
  },
  {
    "tablename": "staff_services",
    "policyname": "Admins can update staff services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "( SELECT is_admin() AS is_admin)",
    "check_expression": null
  },
  {
    "tablename": "staff_services",
    "policyname": "View staff services",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "true",
    "check_expression": null
  },
  {
    "tablename": "user_profiles",
    "policyname": "Update user profiles",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "UPDATE",
    "using_expression": "((id = ( SELECT auth.uid() AS uid)) OR (EXISTS ( SELECT 1\n   FROM user_profiles admin_check\n  WHERE ((admin_check.id = ( SELECT auth.uid() AS uid)) AND (admin_check.role = 'admin'::text)))))",
    "check_expression": "\nCASE\n    WHEN (EXISTS ( SELECT 1\n       FROM user_profiles admin_check\n      WHERE ((admin_check.id = ( SELECT auth.uid() AS uid)) AND (admin_check.role = 'admin'::text)))) THEN true\n    ELSE ((id = ( SELECT auth.uid() AS uid)) AND (role = ( SELECT up.role\n       FROM user_profiles up\n      WHERE (up.id = ( SELECT auth.uid() AS uid)))))\nEND"
  },
  {
    "tablename": "user_profiles",
    "policyname": "Users can insert own profile",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "INSERT",
    "using_expression": null,
    "check_expression": "(id = ( SELECT auth.uid() AS uid))"
  },
  {
    "tablename": "user_profiles",
    "policyname": "View user profiles",
    "permissive": "PERMISSIVE",
    "roles": "{public}",
    "action": "SELECT",
    "using_expression": "((id = ( SELECT auth.uid() AS uid)) OR (EXISTS ( SELECT 1\n   FROM user_profiles admin_check\n  WHERE ((admin_check.id = ( SELECT auth.uid() AS uid)) AND (admin_check.role = 'admin'::text)))))",
    "check_expression": null
  }
]